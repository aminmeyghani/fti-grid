@charset "UTF-8";
/* Smartphones (portrait and landscape) ----------- */
/* Smartphones (landscape) ----------- */
/* Smartphones (portrait) ----------- */
/* iPads (portrait and landscape) ----------- */
/* iPads (landscape) ----------- */
/* iPads (portrait) ----------- */
/* Desktops and laptops ----------- */
/* Large screens ----------- */
/* ## `fti-clearfix`
* Source: http://nicolasgallagher.com/micro-clearfix-hack/
*/
.fti-wrap:before, .row:before, .doublet:before, .triplet:before, .fti-wrap:after, .row:after, .doublet:after, .triplet:after {
  content: " ";
  display: table; }
.fti-wrap:after, .row:after, .doublet:after, .triplet:after {
  clear: both; }

.fti-contain, .fti__contain, .container, .fti-page, .fti-col-1, .fti-col-2, .fti-col-3, .fti-col-4, .triplet-inner, .fti-col-5, .fti-col-6, .doublet-inner, .fti-col-7, .fti-col-8, .fti-col-9, .fti-col-10, .fti-col-11, .fti-col-12, .col-xs-1, .col-xs-2, .col-xs-3, .col-xs-4, .col-xs-5, .col-xs-6, .col-xs-7, .col-xs-8, .col-xs-9, .col-xs-10, .col-xs-11, .col-xs-12 {
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box; }

ul {
  list-style-type: none;
  -webkit-margin-before: 0;
  -webkit-margin-after: 0;
  -webkit-margin-start: 0;
  -webkit-margin-end: 0;
  -webkit-padding-start: 0;
  padding: 0;
  margin: 0; }

li {
  display: block;
  list-style-type: none; }

@media (min-width: 768px) {
  .fti-contain, .container, .fti-page {
    width: 740px; } }
@media (min-width: 992px) {
  .fti-contain, .container, .fti-page {
    width: 980px; } }
@media (min-width: 1200px) {
  .fti-contain, .container, .fti-page {
    width: 1180px; } }

.fti-contain, .fti__contain, .container, .fti-page {
  margin-right: auto;
  margin-left: auto;
  padding-left: 10px;
  padding-right: 10px; }

.fti-wrap, .row, .doublet, .triplet {
  margin-left: -10px;
  margin-right: -10px; }

.fti-col-1, .fti-col-2, .fti-col-3, .fti-col-4, .triplet-inner, .fti-col-5, .fti-col-6, .doublet-inner, .fti-col-7, .fti-col-8, .fti-col-9, .fti-col-10, .fti-col-11, .fti-col-12, .col-xs-1, .col-xs-2, .col-xs-3, .col-xs-4, .col-xs-5, .col-xs-6, .col-xs-7, .col-xs-8, .col-xs-9, .col-xs-10, .col-xs-11, .col-xs-12 {
  position: relative;
  float: left;
  min-height: 1px;
  padding-left: 10px;
  padding-right: 10px; }

.fti-col-1 {
  width: 8.33333%; }

.fti-col-2 {
  width: 16.66667%; }

.fti-col-3 {
  width: 25%; }

.fti-col-4, .triplet-inner {
  width: 33.33333%; }

.fti-col-5 {
  width: 41.66667%; }

.fti-col-6, .doublet-inner {
  width: 50%; }

.fti-col-7 {
  width: 58.33333%; }

.fti-col-8 {
  width: 66.66667%; }

.fti-col-9 {
  width: 75%; }

.fti-col-10 {
  width: 83.33333%; }

.fti-col-11 {
  width: 91.66667%; }

.fti-col-12 {
  width: 100%; }

.col-xs-1 {
  width: 8.33333%; }

.col-xs-2 {
  width: 16.66667%; }

.col-xs-3 {
  width: 25%; }

.col-xs-4 {
  width: 33.33333%; }

.col-xs-5 {
  width: 41.66667%; }

.col-xs-6 {
  width: 50%; }

.col-xs-7 {
  width: 58.33333%; }

.col-xs-8 {
  width: 66.66667%; }

.col-xs-9 {
  width: 75%; }

.col-xs-10 {
  width: 83.33333%; }

.col-xs-11 {
  width: 91.66667%; }

.col-xs-12 {
  width: 100%; }

.mb20 {
  margin-bottom: 20px; }

body {
  margin: 0;
  padding: 0; }

.box {
  border: 1px dashed #000;
  min-height: 100px;
  padding: 10px;
  *width: expression((this.parentNode.clientWidth - parseInt(this.currentStyle['paddingLeft']) - parseInt(this.currentStyle['paddingRight'])) + 'px'); }

.fti-wrap {
  min-width: 100%;
  *width: expression((this.parentNode.clientWidth - parseInt(this.currentStyle['paddingLeft']) - parseInt(this.currentStyle['paddingRight'])) + 'px'); }

/* $ Fluid grid system (12 columns) 
============================================================================ */
/* Sub-Pixel Problems in CSS
 * http://ejohn.org/blog/sub-pixel-problems-in-css/
 * 
 *
 * Unfortunately, thereâ€™s no silver bullet.
 * Read on.
 *
 * FF4+: ok
 *
 * WebKit is ok since 3 May, 2013 
 * http://css-tricks.com/percentage-bugs-in-webkit/
 * http://trac.webkit.org/changeset/116009
 *
 * IE8+: ok
 *
 * IE7: no %, use fixed grid
 * "The only way to prevent layouts from breaking in IE6/7 is to fractionally 
 * reduce the percentages so that they add up to just under 100%."
 * - http://tylertate.com/blog/2012/01/05/subpixel-rounding.html
 *
 * Opera and Safari round the numbers down. 
 * No fix :(
 * A discussion about Opera on GitHub https://github.com/jokjus/centage/issues/1
 * A discussion about Bootstrap fluid grid system on StackOverflow
 * http://stackoverflow.com/questions/10683539/bootstrap-fluid-grid-system-issue-opera-11-64
 *
 *
 */
/*
 * 
 * <body> is the grid container
 *
    body {
      max-width: 940px;
      *min-width: 940px;
    } 
 *
 */
.col-1-5 {
  width: 20%;
  *width: expression((this.parentNode.clientWidth/5 - parseInt(this.currentStyle['paddingLeft']) - parseInt(this.currentStyle['paddingRight'])) + 'px'); }

.col-3-5 {
  width: 60%;
  *width: expression((this.parentNode.clientWidth/5*3 - parseInt(this.currentStyle['paddingLeft']) - parseInt(this.currentStyle['paddingRight'])) + 'px'); }

.col-4-5 {
  width: 80%;
  *width: expression((this.parentNode.clientWidth/5*4 - parseInt(this.currentStyle['paddingLeft']) - parseInt(this.currentStyle['paddingRight'])) + 'px'); }

.col-3-8 {
  width: 37.5%;
  *width: expression((this.parentNode.clientWidth/8*3 - parseInt(this.currentStyle['paddingLeft']) - parseInt(this.currentStyle['paddingRight'])) + 'px'); }

.col-5-8 {
  width: 62.5%;
  *width: expression((this.parentNode.clientWidth/8*5 - parseInt(this.currentStyle['paddingLeft']) - parseInt(this.currentStyle['paddingRight'])) + 'px'); }

.col-7-8 {
  width: 87.5%;
  *width: expression((this.parentNode.clientWidth/8*7 - parseInt(this.currentStyle['paddingLeft']) - parseInt(this.currentStyle['paddingRight'])) + 'px'); }

.col-5-12 {
  width: 41.6666%;
  *width: expression((this.parentNode.clientWidth/12*5 - parseInt(this.currentStyle['paddingLeft']) - parseInt(this.currentStyle['paddingRight'])) + 'px'); }

.fti-col-12 {
  *width: expression((this.parentNode.clientWidth - parseInt(this.currentStyle['paddingLeft']) - parseInt(this.currentStyle['paddingRight'])) + 'px'); }

.fti-col-11 {
  *width: expression((this.parentNode.clientWidth/12*11 - parseInt(this.currentStyle['paddingLeft']) - parseInt(this.currentStyle['paddingRight'])) + 'px'); }

.fti-col-10 {
  *width: expression((this.parentNode.clientWidth/6*5 - parseInt(this.currentStyle['paddingLeft']) - parseInt(this.currentStyle['paddingRight'])) + 'px'); }

.fti-col-9 {
  *width: expression((this.parentNode.clientWidth/4*3 - parseInt(this.currentStyle['paddingLeft']) - parseInt(this.currentStyle['paddingRight'])) + 'px'); }

.fti-col-8 {
  *width: expression((this.parentNode.clientWidth/3*2 - parseInt(this.currentStyle['paddingLeft']) - parseInt(this.currentStyle['paddingRight'])) + 'px'); }

.fti-col-7 {
  *width: expression((this.parentNode.clientWidth/12*7 - parseInt(this.currentStyle['paddingLeft']) - parseInt(this.currentStyle['paddingRight'])) + 'px'); }

.fti-col-6, .doublet-inner {
  *width: expression((this.parentNode.clientWidth/2 - parseInt(this.currentStyle['paddingLeft']) - parseInt(this.currentStyle['paddingRight'])) + 'px'); }

.fti-col-5 {
  width: 40%;
  *width: expression((this.parentNode.clientWidth/5*2 - parseInt(this.currentStyle['paddingLeft']) - parseInt(this.currentStyle['paddingRight'])) + 'px'); }

.fti-col-4, .triplet-inner {
  *width: expression((this.parentNode.clientWidth/3 - parseInt(this.currentStyle['paddingLeft']) - parseInt(this.currentStyle['paddingRight'])) + 'px'); }

.fti-col-3 {
  width: 25%;
  *width: expression((this.parentNode.clientWidth/4 - parseInt(this.currentStyle['paddingLeft']) - parseInt(this.currentStyle['paddingRight'])) + 'px'); }

.fti-col-2 {
  *width: expression((this.parentNode.clientWidth/6 - parseInt(this.currentStyle['paddingLeft']) - parseInt(this.currentStyle['paddingRight'])) + 'px'); }

.fti-col-1 {
  *width: expression((this.parentNode.clientWidth/12 - parseInt(this.currentStyle['paddingLeft']) - parseInt(this.currentStyle['paddingRight'])) + 'px');
  *width: expression((this.parentNode.clientWidth/12 - parseInt(this.currentStyle['paddingLeft']) - parseInt(this.currentStyle['paddingRight'])) + 'px'); }

.col-1-8 {
  width: 12.5%;
  *width: expression((this.parentNode.clientWidth/8 - parseInt(this.currentStyle['paddingLeft']) - parseInt(this.currentStyle['paddingRight'])) + 'px'); }

/*# sourceMappingURL=main.css.map */
